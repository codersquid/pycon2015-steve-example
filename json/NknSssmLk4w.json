{
  "category": "PyCon US 2015", 
  "copyright_text": "creativeCommon", 
  "description": "Working with weak references should not just be for Python wizards. Whether you have a cache, memoizing a function, tracking objects, or various other bookkeeping needs, you definitely do not want code leaking memory or resources. In this talk, we will look at illuminating examples drawn from a variety of sources on how to use weak references to prevent such bugs.\n\n", 
  "embed": "<iframe type='text/html' src='http://www.youtube.com/embed/NknSssmLk4w' width='640' height='360' frameborder='0' allowfullscreen='true'/>", 
  "language": [
    "English"
  ], 
  "quality_notes": "", 
  "recorded": "2015-04-12", 
  "slug": "", 
  "source_url": "https://www.youtube.com/watch?v=NknSssmLk4w", 
  "speakers": [
    "Jim Baker"
  ], 
  "state": 2, 
  "summary": "", 
  "thumbnail_url": "https://i.ytimg.com/vi/NknSssmLk4w/hqdefault.jpg", 
  "title": "A Winning Strategy with The Weakest Link: how to use weak references to make your code more robust", 
  "whiteboard": "needs editing"
}